# Cloud Build YAML for a Pull Request (Github).
# The idea here is to run bundled unit and application tests, then produce a PR-docker image, install
# it in a stage environment and run some integration tests, then tear down the stage release again.
# A TODO step for a Sonar build or some nice code-analysis tool is also provided (could of course be
# part of the simple build step).
steps:

#Access the Maven settings-xml secret
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'MavenSettings'
  entrypoint: bash
  args:
  - '-c'
  - |
    gcloud secrets versions access 1 --secret=cloudbuild-maven-settings-secret > settings.xml

# Perform Maven build including JUnit and functional tests. Just for fun I've added the waitFor.
# It's really not needed but still...
- name: 'maven:3.6.1-jdk-11'
  id: 'MavenBuild'
  waitFor: ['MavenSettings']
  entrypoint: 'mvn'
  args: ['-B', '-q', 'clean', 'install']
  
 # TODO: Perform code analysis steps.
 
 # TODO: Stage deploy steps...
 
 # Produce a docker image from the build result using PR branch and build number.
- name: 'gcr.io/cloud-builders/docker'
  id: 'GcrRelease'
  entrypoint: 'bash'
  args:
  - '-c'
  - |-
    docker build -t gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME-$_PR_NUMBER .
    docker push gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME-$_PR_NUMBER
 
 # Run kustomize to produce stage environment deploy-stage.yaml
- name: 'gcr.io/pingpong-site1-gcp-demo/kustomize'
  id: 'DeployStageYaml'
  entrypoint: bash
  args:
  - '-c'
  - |
    kustomize edit set image gcr.io/$PROJECT_ID/$REPO_NAME:$BRANCH_NAME-$_PR_NUMBER
    kustomize build . > deploy-stage.yaml
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=$_COMPUTE_ZONE'
    - 'CLOUDSDK_CONTAINER_CLUSTER=$_CONTAINER_CLUSTER'
  dir: '$_K8S_STAGE_ENV_FOLDER'
 
# Deploy service to stage environment
- name: "gcr.io/cloud-builders/gke-deploy"
  id: 'DeployStage'
  args:
  - run
  - --filename=deploy-stage.yaml
  - --location=$_COMPUTE_ZONE
  - --cluster=pingpong-site1-cluster
  dir: '$_K8S_STAGE_ENV_FOLDER'
  
# TODO: Potentially run an intergation and acceptance tests to verify all is well

# undeploy service from stage environment
- name: "gcr.io/cloud-builders/kubectl"
  id: 'UndeployStage'
  args: ['delete', '-f', 'deploy-stage.yaml']
  dir: '$_K8S_STAGE_ENV_FOLDER'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=$_COMPUTE_ZONE'
    - 'CLOUDSDK_CONTAINER_CLUSTER=$_CONTAINER_CLUSTER'

substitutions:
  _COMPUTE_ZONE: europe-west3-a
  _CONTAINER_CLUSTER: pingpong-site1-cluster
  _K8S_STAGE_ENV_FOLDER: src/k8s/stage
