steps:

# Perform source code build
- id: 'Perform Maven build including JUnit and functional tests'
  name: 'maven:3.6.1-jdk-11'
  entrypoint: 'mvn'
  args: ['-B', '-q', 'clean', 'install']
  
# Produce a docker image release version.
# Established by stripping -SNAPSHOT from current maven version and storing the value in a file
# Use $(cat _RELEASE_VERSION) to make use of the release version.
- id: 'Extract release version'
  name: 'maven:3.6.3-jdk-11'
  entrypoint: 'bash'
  args:
  - '-c'
  - |-
    echo "$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" | sed "s/-SNAPSHOT//" > _RELEASE_VERSION
    cat _RELEASE_VERSION
  
# Produce a docker image from the build result using release version.
- id: 'Build and push docker image to GCR'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |-
    docker build -t gcr.io/$PROJECT_ID/$_IMAGE_NAME:$(cat _RELEASE_VERSION) .
    docker push gcr.io/$PROJECT_ID/$_IMAGE_NAME:$(cat _RELEASE_VERSION)
    
# Release the version to Github (No test, no artifact deploy for a service)
- id: 'Release the version to Github'
  name: 'maven:3.6.3-jdk-11'
  entrypoint: 'mvn'
  args: ['-B', '-q', 'release:prepare', 'release:perform', '-Darguments="-Dmaven.test.skip=true -Dmaven.deploy.skip=true"']

substitutions:
  _IMAGE_NAME: pingpong-cloud-build